<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <!-- Object Model Version -->
    <modelVersion>4.0.0</modelVersion>

    <!-- Project METADATA -->
    <groupId>eu.sydisnet</groupId>
    <artifactId>blog-samples</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <!-- Project INFORMATION -->
    <name>blog-samples</name>
    <description>Samples explained in my personal blog</description>
    <inceptionYear>2014</inceptionYear>

    <!-- Organization -->
    <organization>
        <name>SYDISNET</name>
        <url>http://sydisnet.eu</url>
    </organization>

    <!-- Modules -->
    <modules>
        <module>camel-integration</module>
    </modules>

    <!-- Common Properties -->
    <properties>
        <!--  Encoding -->
        <!-- Explicitly declaring the source encoding eliminates the following
         message: -->
        <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered
       resources, i.e. build is platform dependent! -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- Source / Target JDK -->
        <maven.compiler.source>1.7</maven.compiler.source>
        <maven.compiler.target>1.7</maven.compiler.target>
        <!-- Others Compiling options -->
        <maven.compiler.showDeprecation>true</maven.compiler.showDeprecation>
        <maven.compiler.showWarnings>true</maven.compiler.showWarnings>
        <maven.compiler.verbose>true</maven.compiler.verbose>
        <!-- Packaging options -->
        <failOnMissingWebXml>false</failOnMissingWebXml>

        <!-- Dependency Management Config -->
        <org.jboss.arquillian.bom.version>1.1.2.Final</org.jboss.arquillian.bom.version>
        <org.jboss.arquillian.drone.webdriver.version>1.2.1.Final</org.jboss.arquillian.drone.webdriver.version>
        <org.jboss.arquillian.graphene2.version>2.0.0.Final</org.jboss.arquillian.graphene2.version>

        <!-- Plugins versions -->
        <!-- Core Plugins -->
        <maven.clean.plugin.version>2.5</maven.clean.plugin.version>
        <maven.compiler.plugin.version>3.1</maven.compiler.plugin.version>
        <maven.failsafe.plugin.version>2.16</maven.failsafe.plugin.version>
        <maven.install.plugin.version>2.5.1</maven.install.plugin.version>
        <maven.resources.plugin.version>2.6</maven.resources.plugin.version>
        <maven.site.plugin.version>3.3</maven.site.plugin.version>
        <maven.surefire.plugin.version>2.16</maven.surefire.plugin.version>
        <maven.verifier.plugin.version>1.0</maven.verifier.plugin.version>
        <!-- Packaging Plugins -->
        <maven.ear.plugin.version>2.9</maven.ear.plugin.version>
        <maven.ejb.plugin.version>2.3</maven.ejb.plugin.version>
        <maven.jar.plugin.version>2.4</maven.jar.plugin.version>
        <maven.rar.plugin.version>2.3</maven.rar.plugin.version>
        <maven.war.plugin.version>2.4</maven.war.plugin.version>
        <maven.shade.plugin.version>2.2</maven.shade.plugin.version>
        <!-- Tools Plugins -->
        <maven.assembly.plugin.version>2.4</maven.assembly.plugin.version>
        <maven.dependency.plugin.version>2.8</maven.dependency.plugin.version>
        <maven.source.plugin.version>2.2.1</maven.source.plugin.version>
        <!-- Deployment to JBoss AS -->
        <jboss.as.maven.plugin.version>7.5.Final</jboss.as.maven.plugin.version>
        <!-- In replacement for release -->
        <versions-maven-plugin.version>2.1</versions-maven-plugin.version>
    </properties>

    <!-- Dependency Management -->
    <dependencyManagement>
        <dependencies>
            <!-- Arquillian Core dependencies -->
            <dependency>
                <groupId>org.jboss.arquillian</groupId>
                <artifactId>arquillian-bom</artifactId>
                <version>${org.jboss.arquillian.bom.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- Arquillian Drone dependencies and WebDriver/Selenium dependencies -->
            <dependency>
                <groupId>org.jboss.arquillian.extension</groupId>
                <artifactId>arquillian-drone-bom</artifactId>
                <version>${org.jboss.arquillian.drone.webdriver.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>


    <!-- Build Config -->
    <build>
        <!-- Plugin management -->
        <pluginManagement>
            <plugins>
                <!--  Core Plugins -->
                <!-- Clean up after the build -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>${maven.clean.plugin.version}</version>
                </plugin>
                <!-- Compiles Java sources -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven.compiler.plugin.version}</version>
                </plugin>
                <!-- Run Integration Tests in an isolated classloader -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${maven.failsafe.plugin.version}</version>
                </plugin>
                <!-- Install the build artifact into the local repository -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>${maven.install.plugin.version}</version>
                </plugin>
                <!-- Copy the resources to the output disrectory for including in the JAR -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven.resources.plugin.version}</version>
                </plugin>
                <!-- Generate a site for the current project -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>${maven.site.plugin.version}</version>
                </plugin>
                <!-- Run Unit Tests in an isolated classloader -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven.surefire.plugin.version}</version>
                </plugin>
                <!-- Verify the existence of certain conditions before integration tests -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-verifier-plugin</artifactId>
                    <version>${maven.verifier.plugin.version}</version>
                </plugin>

                <!-- Packaging Plugins -->
                <!-- Generate an EAR from the current project -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-ear-plugin</artifactId>
                    <version>${maven.ear.plugin.version}</version>
                </plugin>
                <!-- Build an EJB and optional client from the current project -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-ejb-plugin</artifactId>
                    <version>${maven.ejb.plugin.version}</version>
                </plugin>
                <!-- Build a JAR from the current project -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven.jar.plugin.version}</version>
                </plugin>
                <!-- Build a RAR from the current project -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-rar-plugin</artifactId>
                    <version>${maven.rar.plugin.version}</version>
                </plugin>
                <!-- Build a WAR from the current project -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>${maven.war.plugin.version}</version>
                </plugin>
                <!-- Build an Uber-JAR from the current project, including dependencies -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>${maven.shade.plugin.version}</version>
                </plugin>

                <!-- Tools Plugins -->
                <!-- Build an assembly (distribution) of sources and/or binaries -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>${maven.assembly.plugin.version}</version>
                </plugin>
                <!-- Dependency manipulation (copy, unpack) and analysis -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${maven.dependency.plugin.version}</version>
                </plugin>
                <!-- Build a JAR of sources for use in IDEs and distribution to the repository -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${maven.source.plugin.version}</version>
                </plugin>

                <!-- Deployment to JBoss AS -->
                <plugin>
                    <groupId>org.jboss.as.plugins</groupId>
                    <artifactId>jboss-as-maven-plugin</artifactId>
                    <version>${jboss.as.maven.plugin.version}</version>
                </plugin>

                <!-- Codehaus versions-maven-plugin -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>versions-maven-plugin</artifactId>
                    <version>${versions-maven-plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>

    </build>
</project>